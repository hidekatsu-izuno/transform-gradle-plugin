plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
}

group = 'net.arnx'
version = '0.1.0'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    jcenter()
}

dependencies {
    implementation 'org.apache.poi:poi-ooxml:4.1.0'
    implementation 'com.google.guava:guava:27.1-jre'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'commons-io:commons-io:2.6'

    testImplementation gradleTestKit()
    testImplementation 'junit:junit:4.12'
}

gradlePlugin {
    plugins {
        transformSync {
            id = 'net.arnx.transform-sync'
            implementationClass = 'net.arnx.gradle.plugins.TransformSyncPlugin'
        }
    }
}

// Add a source set for the functional test suite
sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}

compileJava {
	options.encoding = 'UTF-8'
}

compileTestJava {
	options.encoding = 'UTF-8'
}

javadoc {
	options {
		links(JavaVersion.current().isJava11Compatible() ? 
			'https://docs.oracle.com/en/java/javase/11/docs/api' : 
			'https://docs.oracle.com/javase/8/docs/api/')
		locale = 'en_US'
		encoding = 'UTF-8'
		docEncoding = 'UTF-8'
		charSet = 'UTF-8'
		author = true
	}
	options.addBooleanOption('html5', 
		JavaVersion.current().isJava9Compatible())
}

task sourceJar(type : Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type : Jar, dependsOn : javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            url 'file:../maven-repo'
        }
    }
}

signing {
	sign publishing.publications.maven
}
